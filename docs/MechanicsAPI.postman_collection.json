{
	"info": {
		"_postman_id": "983c00cb-73ac-4b3d-99b9-e798a517bebb",
		"name": "MechanicsAPI",
		"description": "Mechanics API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "GET /users",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users"
							},
							"response": []
						},
						{
							"name": "success - order by email",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=email&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "email",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users - order by email"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=1&offset=1&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "1",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users - offset limit"
							},
							"response": []
						},
						{
							"name": "success - order desc",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=&sortOrder=desc",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users - order desc"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=asdf&offset=&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - limit"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=asdf&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "asdf",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - offset"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - sortBy",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=asdf&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "asdf",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - sortBy"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=&sortOrder=asdf",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "asdf",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - sortOrder"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{host}}/users",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users?Authorization=Bearer {{token}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer {{token}}",
											"description": "user token"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Invalid token not super user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "{{standard-token}}"
									}
								],
								"url": "{{host}}/users",
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "Get user lists",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET /users/{user_id}",
					"item": [
						{
							"name": "success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/1",
								"description": "Get user success"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/abc",
								"description": "Malformed parameters/body"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{host}}/users/1",
								"description": "Token not exists"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/100",
								"description": "User not found"
							},
							"response": []
						}
					],
					"description": "Get user detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "DELETE /users/{user_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/4",
								"description": "Delete user success"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/abc",
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": "{{host}}/users/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Non admin user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InN0YW5kYXJkQGV4YW1wbGUuY29tIiwiaWQiOjIsIm5hbWUiOiJzdGFuZGFyZCIsInJvbGUiOiJzdGFuZGFyZCIsInRodW1ibmFpbFVybCI6bnVsbH0.qgYGdQ-Nazj3f3dBxmvgXXIJDFNWwoIXeWpcdo0BXGY');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{standard-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/1",
								"description": "Non-Admin user exception"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/users/100",
								"description": "User not found"
							},
							"response": []
						}
					],
					"description": "Delete user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PUT /users/{user_id}/role",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/users/3/role",
								"description": "Role update success"
							},
							"response": []
						},
						{
							"name": "400 - Invalid newRole",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"invalid role\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/users/3/role",
								"description": "Invalid newRole"
							},
							"response": []
						},
						{
							"name": "400 - Invalid user id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"invalid role\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/users/asb/role",
								"description": "Invalid user id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/users/3/role",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/users/3/role",
								"description": "Invalid user token"
							},
							"response": []
						},
						{
							"name": "401 - Non admin user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/users/3/role",
								"description": "Non admin user"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/users/100/role",
								"description": "User not found"
							},
							"response": []
						}
					],
					"description": "Update user role",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"description": "User routes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Worksapces",
			"item": [
				{
					"name": "GET /worksapces",
					"item": [
						{
							"name": "success - admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset&limit=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get workspaces"
							},
							"response": []
						},
						{
							"name": "success - standard",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset&limit=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get workspaces"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=1&limit=1&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get workspaces - offset limit"
							},
							"response": []
						},
						{
							"name": "success - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=&limit=&sortOrder=desc",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get workspaces - sortOrder"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=asb&limit&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "asb",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=&limit=asb&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "asb",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=&limit=&sortOrder=asb",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "asb",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{host}}/workspaces",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'Invalid token');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces",
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "Get workspace list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "POST /worksapces",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"newly created workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces",
								"description": "success to create new workspace"
							},
							"response": []
						},
						{
							"name": "success - standard user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace by standard user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces",
								"description": "success to create new workspace"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces",
								"description": "Invalid name parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": "{{host}}/workspaces",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"workspace1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces",
								"description": "Duplicated name"
							},
							"response": []
						}
					],
					"description": "Create new workspaces",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET /workspaces/{workspace_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/1",
								"description": "success to get workspace detail"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/asd",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{host}}/workspaces/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not a member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": "{{host}}/workspaces/1",
								"description": "Not a member"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/100",
								"description": "Workspace not found"
							},
							"response": []
						}
					],
					"description": "Get workspace detail"
				},
				{
					"name": "DELETE /workspace/{workspace_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/3",
								"description": "success to delete workspace"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/asd",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": "{{host}}/workspaces/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not admin and owner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": "{{host}}/workspaces/1",
								"description": "Not admin and owner"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/workspaces/100",
								"description": "Workspace not found"
							},
							"response": []
						}
					],
					"description": "delete workspace"
				},
				{
					"name": "PATCH /workspaces/{workspace_id}",
					"item": [
						{
							"name": "success - change name",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"workspace-editable-edited\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "success to update workspace by id - change name"
							},
							"response": []
						},
						{
							"name": "success - add member",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberUserIds\": [1, 2]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "success to update workspace by id - add member"
							},
							"response": []
						},
						{
							"name": "success - remove member",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberUserIds\": [1]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "success to update workspace by id - remove member"
							},
							"response": []
						},
						{
							"name": "success - remove project",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "success to update workspace by id - remove project"
							},
							"response": []
						},
						{
							"name": "success - add project",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectIds\": [1]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "success to update workspace by id - add project"
							},
							"response": []
						},
						{
							"name": "success - remove rule",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "success to update workspace by id - remove rule"
							},
							"response": []
						},
						{
							"name": "success - add rule",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleIds\": [1]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "success to update workspace by id - add rule"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new_workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/abc",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid name parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1",
								"description": "Invalid name parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid member ids",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\",\n\t\"memberUserIds\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1",
								"description": "Invalid member ids"
							},
							"response": []
						},
						{
							"name": "400 - Invalid project ids",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\",\n\t\"projectIds\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1",
								"description": "Invalid project ids"
							},
							"response": []
						},
						{
							"name": "400 - Invalid rule ids",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\",\n\t\"ruleIds\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1",
								"description": "Invalid rule ids"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not owner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1",
								"description": "Not owner"
							},
							"response": []
						},
						{
							"name": "404 - workspace not found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/100",
								"description": "Workspace not found"
							},
							"response": []
						},
						{
							"name": "404 - add not exists member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberUserIds\": [1, 100]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "add not exists member"
							},
							"response": []
						},
						{
							"name": "404 - add not exists project",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectIds\": [1, 100]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "add not exists project"
							},
							"response": []
						},
						{
							"name": "404 - add not exists rule",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleIds\": [100]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "add not exists rule"
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"workspace1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/2",
								"description": "Duplicated workspace name"
							},
							"response": []
						}
					],
					"description": "update workspace by id"
				},
				{
					"name": "POST /workspaces/{workspace_id}/copy",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1/copy",
								"description": "success to copy workspace"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/abc/copy",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "400 - invalid name",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1/copy",
								"description": "invalid name"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1/copy",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1/copy",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{standard-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1/copy",
								"description": "Not member"
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/workspaces/1/copy",
								"description": "Duplicated name"
							},
							"response": []
						}
					],
					"description": "copy workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"description": "Workspaces routes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "GET /rules",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=&limit=&offset&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules"
							},
							"response": []
						},
						{
							"name": "success - filter name",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=D&limit=&offset&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "D",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules - filter name"
							},
							"response": []
						},
						{
							"name": "success - offest limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=&limit=1&offset=2&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "2",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules - offset limit"
							},
							"response": []
						},
						{
							"name": "success - desc",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=&limit=&offset=&sortOrder=desc",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules - desc"
							},
							"response": []
						},
						{
							"name": "400 - invalid parameter - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=asdf&offset&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - invalid parameter - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=&offset=asdf&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "asdf",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - invalid parameter - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=&offset=&sortOrder=asdf",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "asdf",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rules?name&limit=asdf&offset&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'Invalid token');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=asdf&offset&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "get rules"
				},
				{
					"name": "POST /rules",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"created new rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules",
								"description": "success to create rule"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules",
								"description": "Invalid rule name"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": "{{host}}/rules",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'Invalid token');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"created new rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules",
								"description": "Already exists"
							},
							"response": []
						}
					],
					"description": "create rule"
				},
				{
					"name": "GET /rules/{rule_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/1",
								"description": "success to get rule detail"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/abd",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{host}}/rules/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/100",
								"description": "Rule not found"
							},
							"response": []
						}
					],
					"description": "Get rule detail"
				},
				{
					"name": "DELETE /rules/{rule_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/3",
								"description": "success to delete rule"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/abd",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{host}}/rules/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/100",
								"description": "Rule not found"
							},
							"response": []
						}
					],
					"description": "delete rule"
				},
				{
					"name": "PATCH /rules/{rule_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"editable-rule-edited\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/2",
								"description": "success to patch rule"
							},
							"response": []
						},
						{
							"name": "400 - Invalid name",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/2",
								"description": "Invalid name"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/abc",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user tok",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/100",
								"description": "Rule not found"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/2",
								"description": "Duplicated rule name"
							},
							"response": []
						}
					],
					"description": "patch rule"
				},
				{
					"name": "POST /rules/{rule_id}/copy",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/copy",
								"description": "success to copy rule"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"rule copied\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/abc/copy",
								"description": "Invalid id paremter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid name",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/copy",
								"description": "Invalid name"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/copy",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/copy",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/copy",
								"description": "Duplicated rule name"
							},
							"response": []
						}
					],
					"description": "Copy rule"
				},
				{
					"name": "GET /rules/{rule_id}/rule-versions",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "success to get rule versions by rule id"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/2/rule-versions?offset=3&limit=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"2",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": "3",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "success to get rule versions by rule id - offset limit"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/abc/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"abc",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset=asd&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": "asd",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset=&limit=asd",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "asd",
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/100/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"100",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Rule not found"
							},
							"response": []
						}
					],
					"description": "get rule versions"
				},
				{
					"name": "POST /rules/{rule_id}/rule-versions",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\",\n\t\"notes\": \"note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/rule-versions",
								"description": "success to create rule version"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - id",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/abc/rule-versions",
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - note",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/rule-versions",
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [],
								"url": "{{host}}/rules/1/rule-versions",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/1/rule-versions",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\",\n\t\"notes\": \"note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/100/rule-versions",
								"description": "Rule not found"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\",\n\t\"notes\": \"Version already exists\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/1/rule-versions",
								"description": "version already exists"
							},
							"response": []
						}
					],
					"description": "create rule version under rule id"
				}
			],
			"description": "Rules routes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "RuleVersions",
			"item": [
				{
					"name": "GET /rule-versions/{rule_version_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1",
								"description": "success to get rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{host}}/rule-versions/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/100",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "get rule version detail"
				},
				{
					"name": "DELETE /rule-versions/{rule_version_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/10",
								"description": "success to delete rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{host}}/rule-versions/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{standard-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1",
								"description": "Not Admin user"
							},
							"response": []
						},
						{
							"name": "403 - Rule version published",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/8",
								"description": "Rule version published"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/100",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Delete rule version"
				},
				{
					"name": "PATCH /rule-versions/{rule_version_id}",
					"item": [
						{
							"name": "success - add rule trees",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ruleTree\": [\n        {\n            \"id\": 1,\n            \"parentId\": null,\n            \"text\": \"root\"\n        },\n        {\n            \"id\": 2,\n            \"parentId\": 1,\n            \"text\": \"child-1\"\n        },\n        {\n            \"id\": 3,\n            \"parentId\": 2,\n            \"text\": \"child-2\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2",
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - remove rule tree",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ruleTree\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2",
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - add enabled vins",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabledVins\": [\n    \t{\n    \t\t\"vin\": \"new vin\"\n    \t}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2",
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - remove enabled vins",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabledVins\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2",
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - change testType, testCategory, specificTest",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"specificTest\": \"modified specific test\",\n    \"testCategory\": \"modified test category\",\n    \"testType\": \"modified test type\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2",
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "400 - Rule tree must be an array",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleTree\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1",
								"description": "Rule tree must be an array"
							},
							"response": []
						},
						{
							"name": "400 - Rule tree root node validate",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleTree\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"parentId\": 1,\n\t\t\t\"text\": \"\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1",
								"description": "Rule tree root node validate"
							},
							"response": []
						},
						{
							"name": "400 - Rule tree field validate",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleTree\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"parentId\": 1\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1",
								"description": "Rule tree field validate"
							},
							"response": []
						},
						{
							"name": "400 - Enabled vins must be an array",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1",
								"description": "Enabled vins must be an array"
							},
							"response": []
						},
						{
							"name": "400 - Enabled vins field validate",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1",
								"description": "Enabled vins field validate"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user tok",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state In Review",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/6",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/8",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - locked rule version",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/9",
								"description": "locked rule version"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/100",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "update rule versions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/publish",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/4/publish",
								"description": "success to request publish rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc/publish",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/rule-versions/1/publish",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/publish",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state In Review",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/4/publish",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/8/publish",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/100/publish",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "request publish rule version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/reject",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/6/reject",
								"description": "success to reject publish"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc/reject",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/rule-versions/1/reject",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/reject",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": "{{host}}/rule-versions/1/reject",
								"description": "Not Admin user"
							},
							"response": []
						},
						{
							"name": "403 - state Draft",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/7/reject",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/8/reject",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/100/reject",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Reject rule version publish"
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/approve",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/5/approve",
								"description": "success to reject publish"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc/approve",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/rule-versions/1/approve",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/approve",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": "{{host}}/rule-versions/1/approve",
								"description": "Not Admin user"
							},
							"response": []
						},
						{
							"name": "403 - state Draft",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/7/approve",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/8/approve",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/100/approve",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Approve to publish rule version"
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/lock",
					"item": [
						{
							"name": "success - lock",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/lock",
								"description": "success to lock rule version"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - newIsLocked",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/1/lock",
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/abc/lock",
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/rule-versions/1/lock",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/lock",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin and User who locked",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/lock",
								"description": "Not Admin and User who locked"
							},
							"response": []
						},
						{
							"name": "403 - state In Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/8/lock",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - already locked",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/lock",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/100/lock",
								"description": "Rule version not found"
							},
							"response": []
						},
						{
							"name": "success - unlock",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/lock",
								"description": "success to unlock rule version"
							},
							"response": []
						}
					],
					"description": "Lock or unlock rule version"
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/updatevins",
					"item": [
						{
							"name": "success - updatevins",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabledVins\": [\n        {\n          \"id\": 2,\n          \"vin\": \"vin 2\",\n          \"testResults\": {\n            \"pFIFTY_PERCENT_POINT fatigue test\": 5.1,\n            \"pFIFTY_PERCENT_POINT binding test\": 2\n          }\n        }\n\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/updatevins",
								"description": "success to lock rule version"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabledVins\": [\n        {\n          \"id\": 100,\n          \"vin\": \"vin 100\",\n          \"testResults\": {\n            \"pFIFTY_PERCENT_POINT fatigue test\": 5.1,\n            \"pFIFTY_PERCENT_POINT binding test\": 2\n          }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/55/updatevins",
								"description": "Rule version not found"
							},
							"response": []
						},
						{
							"name": "400 - vin not found",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabledVins\": [\n        {\n          \"id\": 100,\n          \"vin\": \"vin 100\",\n          \"testResults\": {\n            \"pFIFTY_PERCENT_POINT fatigue test\": 5.1,\n            \"pFIFTY_PERCENT_POINT binding test\": 2\n          }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/updatevins",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Lock or unlock rule version"
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/text",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"text edited\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/text",
								"description": "success to modify rule version text"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc/text",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/rule-versions/1/text",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/text",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"new text 2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/8/text",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"new text 3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/100/text",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Modify rule version text"
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/convert",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"IF THERE IS DATA FOR BRAKING TEST AND THERE IS DATA FOR Brake failure test group AND Wear FOR ANY TEST OF Brake failure test group IS < 30UM AND Wear FOR BRAKING TEST IS <1.6UM THEN \\\"INHIBITION OF BRAKING LIKELY TO BE RESPONSIBLE FOR A B OR C ACTIVITY.\\\" OTHERWISE IF THERE IS DATA FOR BRAKING TEST AND THERE IS DATA  FOR Brake failure test group AND Wear FOR ANY TEST OF Brake failure test group IS < 30UM AND Wear FOR BRAKING TEST IS  >=1.6UM, <15UM THEN \\\"INHIBITION OF BRAKING POSSIBLY RESPONSIBLE FOR A B OR C ACTIVITY.\\\" OTHERWISE IF THERE IS DATA FOR BRAKING TEST AND Wear FOR BRAKING TEST IS <15UM THEN \\\"BRAKING INHIBITOR BUT RELEVANCE TO A B OR C ACTIVITY IS UNCLEAR.\\\" OTHERWISE IF  NO DATA FOR BRAKING TEST THEN \\\"MISSING VALUE\\\" OTHERWISE \\\"FAULT UNLIKELY TO BE BRAKING INHIBITION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/convert",
								"description": "success to modify rule version text"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc/convert",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/rule-versions/1/convert",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/convert",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"new text 2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/4/convert",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - RuleVersion not locked",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"new text 2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/3/convert",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404 - RuleVersion not found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"new text 3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/100/convert",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Modify rule version text"
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/tests",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [1, 2, 3, 4, 5]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/tests",
								"description": "success to modify rule version text"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc/tests",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/rule-versions/1/tests",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/tests",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/4/tests",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - RuleVersion locked",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/tests",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404 - RuleVersion not found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/100/tests",
								"description": "Rule version not found"
							},
							"response": []
						},
						{
							"name": "409 - Test already associated",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/tests",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Modify rule version text"
				},
				{
					"name": "DELETE /rule-versions/{rule_version_id}/tests/{test_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/tests/3",
								"description": "success to modify rule version text"
							},
							"response": []
						},
						{
							"name": "400 - Invalid rule version id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/abc/tests/2",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid test id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rule-versions/1/tests/abc",
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{host}}/rule-versions/1/tests/2",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/rule-versions/1/tests/2",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/4/tests/2",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - RuleVersion locked",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/tests/1",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404 - RuleVersion not found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/100/tests/2",
								"description": "Rule version not found"
							},
							"response": []
						},
						{
							"name": "404 - Test not found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/tests/200",
								"description": "Rule version not found"
							},
							"response": []
						},
						{
							"name": "404 - Test not associated",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tests\": [2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/tests/4",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Modify rule version text"
				},
				{
					"name": "POST /rule-versions/{rule_version_id}/notes",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/2/notes",
								"description": "success to add note to rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/abc/notes",
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/notes",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/notes",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Invalid state",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/8/notes",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/100/notes",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "add note to rule version"
				},
				{
					"name": "GET /rule-versions/{rule_version_id}/nodes/{node_id}",
					"item": [
						{
							"name": "success",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1",
								"description": "success to add note to rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/abc",
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/100",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "add note to rule version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET /rule-versions/{rule_version_id}/nodes/notes",
					"item": [
						{
							"name": "success",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/notes",
								"description": "success to add note to rule version"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/100",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "add note to rule version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "POST /rule-versions/{rule_version_id}/nodes/{node_id}/notes",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1/notes",
								"description": "success to add note to rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/abc/notes",
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1/notes",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/1/notes",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Invalid state",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/10/nodes/1/notes",
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rule-versions/1/nodes/100/notes",
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "add note to rule version"
				}
			],
			"description": "RuleVersions routes"
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "GET /projects",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset&limit&sortOrder&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=1&limit=1&sortOrder&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "success - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit=&sortOrder=desc&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "success - filter name",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit=&sortOrder=&name=T2",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "T2",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit&sortOrder=aa&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "aa",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=aa&limit&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "aa",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit=aa&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "aa",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/projects?offset=&limit&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "get project list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET /projects/{project_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/projects/1",
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": "{{host}}/projects/abc",
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{host}}/projects/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'Invalid token')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/projects/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "{{host}}/projects/100",
								"description": "Project not found"
							},
							"response": []
						}
					],
					"description": "get project detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"description": "Project routes"
		},
		{
			"name": "RuleFunctions",
			"item": [
				{
					"name": "POST /rules/functions/next-tokens",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/next-tokens",
								"description": "Success to get next tokens"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/functions/next-tokens",
								"description": "Missing ruleText"
							},
							"response": []
						},
						{
							"name": "400 - incorrect grammar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF THERE IST\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/next-tokens",
								"description": "Incorrect grammar"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/functions/next-tokens",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": "{{host}}/rules/functions/next-tokens",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Get next token of ruleText",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "POST/ rules/functions/translation",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/translation",
								"description": "success to translate"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/translation",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "400 - incorrect grammar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/translation",
								"description": "Incorrect grammar"
							},
							"response": []
						},
						{
							"name": "400 - incomplete grammar",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/translation",
								"description": "Incomplete grammar"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/functions/translation",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": "{{host}}/rules/functions/translation",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Translate rule text"
				},
				{
					"name": "POST /rules/functions/parses",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/parses",
								"description": "success to parse"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/parses",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/functions/parses",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [],
								"url": "{{host}}/rules/functions/parses",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Return whether or not ruleText parses"
				},
				{
					"name": "POST /rules/functions/is-complete",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/is-complete",
								"description": "success to get completed state"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/functions/is-complete",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/functions/is-complete",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": "{{host}}/rules/functions/is-complete",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Return whether or not ruleText is completed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "POST /rules/functions/sankey",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodes\": [\n        {\n            \"node\": \"1.1\",\n            \"text\": \"blah\"\n        }\n    ],\n    \"ruleText\": \"If no data for C_BRAKE TEST THEN \\\"missing value\\\" Otherwise if there is data for BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST is <0.25uM AND COMPONENT is at least 24x less POWERFUL in the BRAKE_DRUM TEST THEN \\\"Mode of Failure is likely to be ACCEL BRAKE CRITICAL BREAKDOWN. Check intensity\\\" Otherwise if there is data for DRUMCRACK TEST AND FIFTY_PERCENT_POINT for C_BRAKE TEST is <0.25uM AND COMPONENT is at least 24x less POWERFUL in the BRAKEDRUM TEST THEN \\\"Mode of Failure is likely to be ACCEL BRAKE. CRITICAL BREAKDOWN. Check intensity.\\\" Otherwise if no data for BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT for C_BRAKE TEST is <0.25uM THEN \\\"Mode of Failure is possibly ACCEL BRAKE CRITICAL BREAKDOWN. Check for specific cracked drum issues.\\\" Otherwise if there is data for BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT for C_BRAKE TEST is <30uM AND COMPONENT is at least 24x less POWERFUL in the BRAKE_DRUM TEST THEN \\\"Mode of Failure is possibly ACCEL BRAKE CRITICAL BREAKDOWN. Check intensity.\\\" Otherwise if there is data for DRUMCRACK TEST AND FIFTY_PERCENT_POINT for C_BRAKE TEST is <30uM AND COMPONENT is at least 24x less POWERFUL in the DRUMCRACK TEST THEN \\\"Mode of Failure is possibly ACCEL BRAKE CRITICAL BREAKDOWN. Check intensity.\\\" Otherwise if FIFTY_PERCENT_POINT for C_BRAKE TEST is <30uM THEN \\\"Weak ACCEL BRAKE inhibitor. Probably not the mode of failure unless driving under the inflence of alcohol.\\\" Otherwise \\\"unlikely to be ACCEL BRAKE mode of action.\\\"\",\n    \"agms\": {\n    },\n    \"ats\": {\n\t\t\"key\": [\"50PERCENT_POINT\"],\n    \t\"key test\": [\"50PERCENT_POINT\"],\n    \t\"C_BRAKE TEST\": [\n    \t\t\"50PERCENT_POINT\",\n    \t    \"50PERCENT_POINT\"\n    \t    ],\n    \t\"BRAKEDRUM TEST\": [\"50PERCENT_POINT\"],\n    \t\"BRAKE_DRUM TEST\": [\"50PERCENT_POINT\"],\n    \t\"DRUMCRACK TEST\": [\"50PERCENT_POINT\"]\n    },\n    \"ams\": {\n\t\t\"key\": [\"I.Cough\"],\n    \t\"key test\": [\"I.ABS/garage*test\"],\n    \t\"C_BRAKE TEST\": [\n    \t\t\"I.CBS/c-abs*test\",\n        \t\"I.CBS/cd-abs*test\"\n        \t],\n    \t\"BRAKEDRUM TEST\": [\"F.BFS/hlmi*test\"],\n    \t\"BRAKE_DRUM TEST\": [\"I.BDS/hfdf*test\"],\n    \t\"DRUMCRACK TEST\": [\"I.DCK/dfdf-1*test\"]\n    },\n    \"vins\": [\n\t\t{\n\t\t\t\"name\": \"J456SBBJK\",\n\t\t\t\"testResults\": {\n\t\t\t\t\"p50PERCENT_POINT I.DCK/dfdf-1 test\": 1.0,\n\t\t    \t\"p50PERCENT_POINT I.ABS/garage test\": 2.0,\n\t\t        \"p50PERCENT_POINT I.ABS/cdo-abs test\": 3.0,\n\t\t        \"p50PERCENT_POINT I.CBS/c-abs test\": 4.0,\n\t\t        \"p50PERCENT_POINT I.CBS/cd-abs test\": 5.0,\n\t\t        \"p50PERCENT_POINT F.BFS/hlmi test\": 6.0,\n\t\t        \"p50PERCENT_POINT I.BDS/hfdf test\": 3.0\n\t\t\t},\n            \"qualifiers\": {\n                \"p50PERCENT_POINT I.DCK/dfdf-1 test\": \"=\",\n\t\t        \"p50PERCENT_POINT I.ABS/cdo-abs test\": \"A,\"\n            }\n\t\t}, {\n\t\t\t\"name\": \"VRTK559197\",\n\t\t\t\"testResults\": {\n\t\t\t\t\"p50PERCENT_POINT I.DCK/dfdf-1 test\": 1.0,\n\t\t    \t\"p50PERCENT_POINT I.ABS/garage test\": 2.0,\n\t\t    \t\"p50PERCENT_POINT I.ABS/cdo-abs test\": 3.0,\n\t\t    \t\"p50PERCENT_POINT I.CBS/c-abs test\": 4.0,\n\t\t    \t\"p50PERCENT_POINT I.CBS/cd-abs test\": 5.0,\n\t\t    \t\"p50PERCENT_POINT F.BFS/hlmi test\": 6.0,\n\t\t    \t\"p50PERCENT_POINT I.BDS/hfdf test\": 3.0\n\t\t\t}\n        }, {\n\t\t\t\"name\": \"VRTK559198\",\n\t\t\t\"testResults\": {\n\t\t\t\t\"p50PERCENT_POINT I.DCK/dfdf-1 test\": 1.0,\n                \"p50PERCENT_POINT I.ABS/garage test\": 2.0,\n                \"p50PERCENT_POINT I.ABS/cdo-abs test\": 3.0,\n                \"p50PERCENT_POINT I.CBS/c-abs test\": 4.0,\n                \"p50PERCENT_POINT I.CBS/cd-abs test\": 5.0,\n                \"p50PERCENT_POINT F.BFS/hlmi test\": 6.0,\n                \"p50PERCENT_POINT I.BDS/hfdf test\": 3.0\n\t\t\t}\n        }, {\n\t\t\t\"name\": \"DDWK559199\",\n\t\t\t\"testResults\": {\n\t\t\t\t\"p50PERCENT_POINT I.DCK/dfdf-1 test\": 1.0,\n                \"p50PERCENT_POINT I.ABS/garage test\": 2.0,\n                \"p50PERCENT_POINT I.ABS/cdo-abs test\": 3.0,\n                \"p50PERCENT_POINT I.CBS/c-abs test\": 4.0,\n                \"p50PERCENT_POINT I.CBS/cd-abs test\": 5.0,\n                \"p50PERCENT_POINT F.BFS/hlmi test\": 6.0,\n                \"p50PERCENT_POINT I.BDS/hfdf test\": 3.0\n\t\t\t}\n        }, {\n\t\t\t\"name\": \"DDTK559200\",\n\t\t\t\"testResults\": {\n\t\t\t\t\"p50PERCENT_POINT I.DCK/dfdf-1 test\": 1.0,\n                \"p50PERCENT_POINT I.ABS/garage test\": 2.0,\n                \"p50PERCENT_POINT I.ABS/cdo-abs test\": 3.0,\n                \"p50PERCENT_POINT I.CBS/c-abs test\": 4.0,\n                \"p50PERCENT_POINT I.CBS/cd-abs test\": 5.0,\n                \"p50PERCENT_POINT F.BFS/hlmi test\": 6.0,\n                \"p50PERCENT_POINT I.BDS/hfdf test\": 3.0\n\t\t\t}\n        }, {\n\t\t\t\"name\": \"PDDK559201\",\n\t\t\t\"testResults\": {\n\t\t\t\t\"p50PERCENT_POINT I.DCK/dfdf-1 test\": 1.0,\n\t\t\t\t\"p50PERCENT_POINT I.ABS/garage test\": 2.0,\n                \"p50PERCENT_POINT I.ABS/cdo-abs test\": 3.0,\n                \"p50PERCENT_POINT I.CBS/c-abs test\": 4.0,\n                \"p50PERCENT_POINT I.CBS/cd-abs test\": 5.0,\n                \"p50PERCENT_POINT F.BFS/hlmi test\": 6.0,\n                \"p50PERCENT_POINT I.BDS/hfdf test\": 3.0\n\t\t\t}\n\t\t}, {\n\t\t\t\"name\": \"PDWK559202\",\n\t\t\t\"testResults\": {\n\t\t\t\t\"p50PERCENT_POINT I.DCK/dfdf-1 test\": 1.0,\n                \"p50PERCENT_POINT I.ABS/garage test\": 2.0,\n                \"p50PERCENT_POINT I.ABS/cdo-abs test\": 3.0,\n                \"p50PERCENT_POINT I.CBS/c-abs test\": 4.0,\n                \"p50PERCENT_POINT I.CBS/cd-abs test\": 5.0,\n                \"p50PERCENT_POINT F.BFS/hlmi test\": 6.0,\n                \"p50PERCENT_POINT I.BDS/hfdf test\": 3.0\n\t\t\t}\n        }\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/sankey",
								"description": "success to get completed state"
							},
							"response": []
						},
						{
							"name": "400 - missing ruleText",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodes\": [\n        {\n            \"node\": \"1.1\",\n            \"text\": \"blah\"\n        }\n    ],\n    \"rule_text\": \"entire rule\",\n    \"agms\": {\n        \"group1\": [\n            \"category1\",\n            \"category2\"\n        ]\n    },\n    \"ats\": {\n        \"category1\": [\n            \"FIFTY_PER_CENT\",\n            \"FIFTY_PER_CENT\"\n        ],\n        \"category2\": [\n            \"FIFTY_PER_CENT\",\n            \"FIFTY_PER_CENT\"\n        ]\n    },\n    \"ams\": {\n        \"category1\": [\n            \"speed\",\n            \"blah\"\n        ],\n        \"category2\": [\n            \"name1\",\n            \"name2\"\n        ]\n    },\n    \"vins\": [\n        {\n            \"name\": \"VIN123\",\n            \"testResults\": {\n                \"speed\": 5,\n                \"blah\": 10\n            }\n        },\n        {\n            \"name\": \"VIN333\",\n            \"testResults\": {\n                \"speed\": 5,\n                \"blah\": 11\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/sankey",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "400 - vins is not an array",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodes\": [\n        {\n            \"node\": \"1.1\",\n            \"text\": \"blah\"\n        }\n    ],\n    \"ruleText\": \"entire rule\",\n    \"agms\": {\n        \"group1\": [\n            \"category1\",\n            \"category2\"\n        ]\n    },\n    \"ats\": {\n        \"category1\": [\n            \"FIFTY_PER_CENT\",\n            \"FIFTY_PER_CENT\"\n        ],\n        \"category2\": [\n            \"FIFTY_PER_CENT\",\n            \"FIFTY_PER_CENT\"\n        ]\n    },\n    \"ams\": {\n        \"category1\": [\n            \"speed\",\n            \"blah\"\n        ],\n        \"category2\": [\n            \"name1\",\n            \"name2\"\n        ]\n    },\n    \"vins\": {\n        \"name\": \"VIN123\",\n        \"testResults\": {\n            \"speed\": 5,\n            \"blah\": 10\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/functions/sankey",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/functions/sankey",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": "{{host}}/rules/functions/sankey",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Return whether or not ruleText is completed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET /rules/functions/specific-tests",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "success to get tests"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Get specific tests by category"
				}
			],
			"description": "Endpoints of the rule functions"
		},
		{
			"name": "NodeFunctions",
			"item": [
				{
					"name": "POST /rules/node-functions/next-tokens",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nodeText\": \"IF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/next-tokens",
								"description": "Success to get next tokens"
							},
							"response": []
						},
						{
							"name": "400 - missing node text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rules/node-functions/next-tokens",
								"description": "Missing ruleText"
							},
							"response": []
						},
						{
							"name": "400 - incorrect grammar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nodeText\": \"IF THERE IST\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/next-tokens",
								"description": "Incorrect grammar"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/node-functions/next-tokens",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": "{{host}}/rules/node-functions/next-tokens",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Get next token of ruleText",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "POST/ rules/node-functions/translation",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nodeText\": \"IF NO DATA FOR C_BRAKE TEST\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/translation",
								"description": "success to translate"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/translation",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "400 - incorrect grammar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nodeText\": \"IF SOMETHING VERY WRONG\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/translation",
								"description": "Incorrect grammar"
							},
							"response": []
						},
						{
							"name": "400 - incomplete grammar",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nodeText\": \"IF NO DATA FOR\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/translation",
								"description": "Incomplete grammar"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/node-functions/translation",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": "{{host}}/rules/node-functions/translation",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Translate rule text"
				},
				{
					"name": "POST /rules/node-functions/parses",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nodeText\": \"OTHERWISE IF NO DATA FOR C_BRAKE TEST\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/parses",
								"description": "success to parse"
							},
							"response": []
						},
						{
							"name": "400 - missing node text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/parses",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/node-functions/parses",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [],
								"url": "{{host}}/rules/node-functions/parses",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Return whether or not ruleText parses"
				},
				{
					"name": "POST /rules/node-functions/is-complete",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nodeText\": \"OTHERWISE IF NO DATA FOR C_BRAKE TEST\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/rules/node-functions/is-complete",
								"description": "success to get completed state"
							},
							"response": []
						},
						{
							"name": "400 - missing node text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": "{{host}}/rules/node-functions/is-complete",
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": "{{host}}/rules/node-functions/is-complete",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": "{{host}}/rules/node-functions/is-complete",
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Return whether or not ruleText is completed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET /rules/node-functions/specific-tests",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/node-functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"node-functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "success to get tests"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/node-functions/specific-tests?category=key",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"node-functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": "key"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/rules/node-functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"node-functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Get specific tests by category"
				}
			],
			"description": "Endpoints of the rule functions"
		},
		{
			"name": "Invitations",
			"item": [
				{
					"name": "POST /invitations",
					"item": [
						{
							"name": "success no workspaceId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"test@test.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "success with workspaceId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"standard@example.com\",\n\t\"workspaceId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "400 - invalid email",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "400 - nonexisting email",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"something@wrong.com\",\n\t\"workspaceId\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "401 - token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"admin@admin.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "401 - invalid token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{invalid-token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"admin@admin.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "403 - not owner",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"admin@admin.com\",\n\t\"workspaceId\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT /invitations",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"{{invitation-token}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "400 - no invitation token Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "400 - wrong invitation token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"NOT A TOKEN\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "401 - token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"{{invitation-token}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "401 - invalid token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{invalid-token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"{{invitation-token}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						},
						{
							"name": "403 - nonexistent invitation token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{standard-token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"4e977bc7-7c1a-4fb4-acb0-11eb7416095d\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/invitations"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "POST /import/rule",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "base/Okinawa_Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/import/rule"
							},
							"response": []
						},
						{
							"name": "400 - no file",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": "{{host}}/import/rule"
							},
							"response": []
						},
						{
							"name": "400 - invalid rule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Invalid Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/import/rule"
							},
							"response": []
						},
						{
							"name": "401 - token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Brake Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/import/rule"
							},
							"response": []
						},
						{
							"name": "401 - invalid token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{invalid-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Brake Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/import/rule"
							},
							"response": []
						},
						{
							"name": "409 - duplicate (the same file)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Brake Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/import/rule"
							},
							"response": []
						}
					]
				},
				{
					"name": "POST /import/project",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "base/Okinawa_Project.xlsx"
										}
									]
								},
								"url": "{{host}}/import/project"
							},
							"response": []
						},
						{
							"name": "400 - no file",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": "{{host}}/import/project"
							},
							"response": []
						},
						{
							"name": "401 - token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Project and vins.xlsx"
										}
									]
								},
								"url": "{{host}}/import/project"
							},
							"response": []
						},
						{
							"name": "401 - invalid token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{invalid-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Project and vins.xlsx"
										}
									]
								},
								"url": "{{host}}/import/project"
							},
							"response": []
						}
					]
				},
				{
					"name": "POST /import/mappings",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "base/Okinawa_Mappings.xlsx"
										}
									]
								},
								"url": "{{host}}/import/mappings"
							},
							"response": []
						},
						{
							"name": "400 - no file",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": "{{host}}/import/mappings"
							},
							"response": []
						},
						{
							"name": "401 - token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Project and vins.xlsx"
										}
									]
								},
								"url": "{{host}}/import/mappings"
							},
							"response": []
						},
						{
							"name": "401 - invalid token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{invalid-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Project and vins.xlsx"
										}
									]
								},
								"url": "{{host}}/import/mappings"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "AsyncTasks",
			"item": [
				{
					"name": "GET /async-tasks/{task_id}",
					"item": [
						{
							"name": "success",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Brake Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/async-tasks/1"
							},
							"response": []
						},
						{
							"name": "401 - Token is missining",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{host}}/async-tasks/1",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'Invalid token')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/async-tasks/1",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "{{host}}/async-tasks/100",
								"description": "Project not found"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET /async-tasks/running",
					"item": [
						{
							"name": "success",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Brake Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/async-tasks/running"
							},
							"response": []
						},
						{
							"name": "401 - Token is missining",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{host}}/async-tasks/running",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'Invalid token')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/async-tasks/running",
								"description": "Invalid token"
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT /async-tasks/{task_id}/cancel",
					"item": [
						{
							"name": "success",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "Brake Rule.xlsx"
										}
									]
								},
								"url": "{{host}}/async-tasks/1/cancel"
							},
							"response": []
						},
						{
							"name": "401 - Token is missining",
							"request": {
								"method": "PUT",
								"header": [],
								"url": "{{host}}/async-tasks/1/cancel",
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('token', 'Invalid token')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": "{{host}}/async-tasks/1/cancel",
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "{{host}}/async-tasks/100/cancel",
								"description": "Project not found"
							},
							"response": []
						},
						{
							"name": "409 - Task not running",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "{{host}}/async-tasks/1/cancel",
								"description": "Project not found"
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Mappings",
			"item": [
				{
					"name": "test-categories",
					"item": [
						{
							"name": "/mappings/test-categories",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/mappings/test-categories?name=&limit=10000000000&offset=0&sortOrder=asc",
									"host": [
										"{{host}}"
									],
									"path": [
										"mappings",
										"test-categories"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter the results by name. Keep the results \nthat contain the specified string in its name.\n"
										},
										{
											"key": "limit",
											"value": "10000000000",
											"description": "Maximum number of results to return"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Start index of results to return"
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Order to sort the results (ascending/descending)"
										}
									]
								},
								"description": "Get all test categories (sorted in alphabetical order by name)"
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Test categories results matching the parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"paginationInfo\": {\n  \"limit\": -69468226,\n  \"offset\": -11785383,\n  \"totalCount\": -12939030\n },\n \"results\": [\n  {\n   \"id\": 3056782,\n   \"name\": \"Duis e\"\n  },\n  {\n   \"id\": -29721255,\n   \"name\": \"ex fugiat in eu est\"\n  }\n ]\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								}
							]
						},
						{
							"name": "/mappings/test-categories",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Cat1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/mappings/test-categories",
								"description": "Get all test categories (sorted in alphabetical order by name)"
							},
							"response": [
								{
									"name": "Test categories results matching the parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"paginationInfo\": {\n  \"limit\": -69468226,\n  \"offset\": -11785383,\n  \"totalCount\": -12939030\n },\n \"results\": [\n  {\n   \"id\": 3056782,\n   \"name\": \"Duis e\"\n  },\n  {\n   \"id\": -29721255,\n   \"name\": \"ex fugiat in eu est\"\n  }\n ]\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								}
							]
						},
						{
							"name": "/mappings/test-categories",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Cat1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/mappings/test-categories?name=Cat1",
									"host": [
										"{{host}}"
									],
									"path": [
										"mappings",
										"test-categories"
									],
									"query": [
										{
											"key": "name",
											"value": "Cat1"
										}
									]
								},
								"description": "Get all test categories (sorted in alphabetical order by name)"
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Test categories results matching the parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"paginationInfo\": {\n  \"limit\": -69468226,\n  \"offset\": -11785383,\n  \"totalCount\": -12939030\n },\n \"results\": [\n  {\n   \"id\": 3056782,\n   \"name\": \"Duis e\"\n  },\n  {\n   \"id\": -29721255,\n   \"name\": \"ex fugiat in eu est\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "/mappings/test-categories/:testCategoryId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/mappings/test-categories/:testCategoryId",
									"host": [
										"{{host}}"
									],
									"path": [
										"mappings",
										"test-categories",
										":testCategoryId"
									],
									"variable": [
										{
											"key": "testCategoryId",
											"value": "1",
											"description": "(Required) ID of test category to get"
										}
									]
								},
								"description": "Get a rule by ID"
							},
							"response": [
								{
									"name": "The requested test category",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories/:testCategoryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories",
												":testCategoryId"
											],
											"variable": [
												{
													"key": "testCategoryId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 25831754,\n \"name\": \"proident\"\n}"
								},
								{
									"name": "Test category not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories/:testCategoryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories",
												":testCategoryId"
											],
											"variable": [
												{
													"key": "testCategoryId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories/:testCategoryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories",
												":testCategoryId"
											],
											"variable": [
												{
													"key": "testCategoryId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories/:testCategoryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories",
												":testCategoryId"
											],
											"variable": [
												{
													"key": "testCategoryId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/test-categories/:testCategoryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"test-categories",
												":testCategoryId"
											],
											"variable": [
												{
													"key": "testCategoryId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "tests",
					"item": [
						{
							"name": "/mappings/tests",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/mappings/tests?name=&category=&limit=10000000000&offset=0&sortOrder=asc",
									"host": [
										"{{host}}"
									],
									"path": [
										"mappings",
										"tests"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter the results by name. Keep the results \nthat contain the specified string in its name.\n"
										},
										{
											"key": "category",
											"value": "",
											"description": "Filter the results by category name. Keep the results \nthat contain the specified string in its name.\n"
										},
										{
											"key": "limit",
											"value": "10000000000",
											"description": "Maximum number of results to return"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Start index of results to return"
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Order to sort the results (ascending/descending)"
										}
									]
								},
								"description": "Get all tests (sorted in alphabetical order by name)"
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Tests results matching the parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"paginationInfo\": {\n  \"limit\": -7155521,\n  \"offset\": 45380657,\n  \"totalCount\": 20555657\n },\n \"results\": [\n  {\n   \"id\": -14577046,\n   \"name\": \"ipsum fugiat dolor ut\",\n   \"testCategoryId\": 80247098,\n   \"testCategoryName\": \"Excepteur dolore aliquip adipisici\"\n  },\n  {\n   \"id\": -86188590,\n   \"name\": \"sunt in reprehenderit magna\",\n   \"testCategoryId\": -65930922,\n   \"testCategoryName\": \"laboris ullamco\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "/mappings/tests",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"I.VG_SC_1\",\n    \"testCategoryId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/mappings/tests",
								"description": "Get all tests (sorted in alphabetical order by name)"
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Tests results matching the parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"paginationInfo\": {\n  \"limit\": -7155521,\n  \"offset\": 45380657,\n  \"totalCount\": 20555657\n },\n \"results\": [\n  {\n   \"id\": -14577046,\n   \"name\": \"ipsum fugiat dolor ut\",\n   \"testCategoryId\": 80247098,\n   \"testCategoryName\": \"Excepteur dolore aliquip adipisici\"\n  },\n  {\n   \"id\": -86188590,\n   \"name\": \"sunt in reprehenderit magna\",\n   \"testCategoryId\": -65930922,\n   \"testCategoryName\": \"laboris ullamco\"\n  }\n ]\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								}
							]
						},
						{
							"name": "/mappings/tests",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/mappings/tests?name=I.VG_SC_1",
									"host": [
										"{{host}}"
									],
									"path": [
										"mappings",
										"tests"
									],
									"query": [
										{
											"key": "name",
											"value": "I.VG_SC_1"
										}
									]
								},
								"description": "Get all tests (sorted in alphabetical order by name)"
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Tests results matching the parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"paginationInfo\": {\n  \"limit\": -7155521,\n  \"offset\": 45380657,\n  \"totalCount\": 20555657\n },\n \"results\": [\n  {\n   \"id\": -14577046,\n   \"name\": \"ipsum fugiat dolor ut\",\n   \"testCategoryId\": 80247098,\n   \"testCategoryName\": \"Excepteur dolore aliquip adipisici\"\n  },\n  {\n   \"id\": -86188590,\n   \"name\": \"sunt in reprehenderit magna\",\n   \"testCategoryId\": -65930922,\n   \"testCategoryName\": \"laboris ullamco\"\n  }\n ]\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests?name=<string>&category=<string>&limit=10000000000&offset=0&sortOrder=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "category",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10000000000"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sortOrder",
													"value": "asc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								}
							]
						},
						{
							"name": "/mappings/tests/:testId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin-token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/mappings/tests/:testId",
									"host": [
										"{{host}}"
									],
									"path": [
										"mappings",
										"tests",
										":testId"
									],
									"variable": [
										{
											"key": "testId",
											"value": "1",
											"description": "(Required) ID of test to get"
										}
									]
								},
								"description": "Get a test by ID"
							},
							"response": [
								{
									"name": "Test category not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests/:testId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests",
												":testId"
											],
											"variable": [
												{
													"key": "testId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "The requested test",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests/:testId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests",
												":testId"
											],
											"variable": [
												{
													"key": "testId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 75866630,\n \"name\": \"ut volu\",\n \"testCategoryId\": 23199819,\n \"testCategoryName\": \"ex cupidatat ad aute\"\n}"
								},
								{
									"name": "Missing or invalid JSON Web Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests/:testId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests",
												":testId"
											],
											"variable": [
												{
													"key": "testId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Missing or malformed parameters/body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests/:testId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests",
												":testId"
											],
											"variable": [
												{
													"key": "testId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/tests/:testId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"tests",
												":testId"
											],
											"variable": [
												{
													"key": "testId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "/mappings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin-token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/mappings?name=&limit=10000000000&offset=0&sortOrder=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"mappings"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Filter the results by name. Keep the results \nthat contain the specified string in its name.\n"
								},
								{
									"key": "limit",
									"value": "10000000000",
									"description": "Maximum number of results to return"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Start index of results to return"
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Order to sort the results (ascending/descending)"
								}
							]
						},
						"description": "Get all test categories (sorted in alphabetical order by name)"
					},
					"response": [
						{
							"name": "Missing or malformed parameters/body",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										"test-categories"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "10000000000"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "sortOrder",
											"value": "asc"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
						},
						{
							"name": "Test categories results matching the parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										"test-categories"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "10000000000"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "sortOrder",
											"value": "asc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"paginationInfo\": {\n  \"limit\": -69468226,\n  \"offset\": -11785383,\n  \"totalCount\": -12939030\n },\n \"results\": [\n  {\n   \"id\": 3056782,\n   \"name\": \"Duis e\"\n  },\n  {\n   \"id\": -29721255,\n   \"name\": \"ex fugiat in eu est\"\n  }\n ]\n}"
						},
						{
							"name": "Missing or invalid JSON Web Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										"test-categories"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "10000000000"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "sortOrder",
											"value": "asc"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mappings/test-categories?name=<string>&limit=10000000000&offset=0&sortOrder=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										"test-categories"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "10000000000"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "sortOrder",
											"value": "asc"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 17444689,\n \"message\": \"esse irure dolor\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}